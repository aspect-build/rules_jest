"@generated by @aspect_rules_js//npm/private:translate_pnpm_lock.bzl from pnpm lock file @//:pnpm-lock.yaml"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:linked_npm_packages.bzl", "linked_npm_packages")
load("@npm__at_ampproject_remapping__2.2.0__links//:defs.bzl", link_0 = "link_npm_package")
load("@npm__at_babel_code-frame__7.16.7__links//:defs.bzl", link_1 = "link_npm_package")
load("@npm__at_babel_compat-data__7.17.10__links//:defs.bzl", link_2 = "link_npm_package")
load("@npm__at_babel_core__7.18.2__links//:defs.bzl", link_3 = "link_npm_package")
load("@npm__at_babel_generator__7.18.2__links//:defs.bzl", link_4 = "link_npm_package")
load("@npm__at_babel_helper-compilation-targets__7.18.2__at_babel_core_7.18.2__links//:defs.bzl", link_5 = "link_npm_package")
load("@npm__at_babel_helper-environment-visitor__7.18.2__links//:defs.bzl", link_6 = "link_npm_package")
load("@npm__at_babel_helper-function-name__7.17.9__links//:defs.bzl", link_7 = "link_npm_package")
load("@npm__at_babel_helper-hoist-variables__7.16.7__links//:defs.bzl", link_8 = "link_npm_package")
load("@npm__at_babel_helper-module-imports__7.16.7__links//:defs.bzl", link_9 = "link_npm_package")
load("@npm__at_babel_helper-module-transforms__7.18.0__links//:defs.bzl", link_10 = "link_npm_package")
load("@npm__at_babel_helper-plugin-utils__7.17.12__links//:defs.bzl", link_11 = "link_npm_package")
load("@npm__at_babel_helper-simple-access__7.18.2__links//:defs.bzl", link_12 = "link_npm_package")
load("@npm__at_babel_helper-split-export-declaration__7.16.7__links//:defs.bzl", link_13 = "link_npm_package")
load("@npm__at_babel_helper-validator-identifier__7.16.7__links//:defs.bzl", link_14 = "link_npm_package")
load("@npm__at_babel_helper-validator-option__7.16.7__links//:defs.bzl", link_15 = "link_npm_package")
load("@npm__at_babel_helpers__7.18.2__links//:defs.bzl", link_16 = "link_npm_package")
load("@npm__at_babel_highlight__7.17.12__links//:defs.bzl", link_17 = "link_npm_package")
load("@npm__at_babel_parser__7.18.4__links//:defs.bzl", link_18 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-async-generators__7.8.4__at_babel_core_7.18.2__links//:defs.bzl", link_19 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-bigint__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_20 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-class-properties__7.12.13__at_babel_core_7.18.2__links//:defs.bzl", link_21 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-import-meta__7.10.4__at_babel_core_7.18.2__links//:defs.bzl", link_22 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-json-strings__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_23 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-logical-assignment-operators__7.10.4__at_babel_core_7.18.2__links//:defs.bzl", link_24 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-nullish-coalescing-operator__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_25 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-numeric-separator__7.10.4__at_babel_core_7.18.2__links//:defs.bzl", link_26 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-object-rest-spread__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_27 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-optional-catch-binding__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_28 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-optional-chaining__7.8.3__at_babel_core_7.18.2__links//:defs.bzl", link_29 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-top-level-await__7.14.5__at_babel_core_7.18.2__links//:defs.bzl", link_30 = "link_npm_package")
load("@npm__at_babel_plugin-syntax-typescript__7.17.12__at_babel_core_7.18.2__links//:defs.bzl", link_31 = "link_npm_package")
load("@npm__at_babel_template__7.16.7__links//:defs.bzl", link_32 = "link_npm_package")
load("@npm__at_babel_traverse__7.18.2__links//:defs.bzl", link_33 = "link_npm_package")
load("@npm__at_babel_types__7.18.4__links//:defs.bzl", link_34 = "link_npm_package")
load("@npm__at_bcoe_v8-coverage__0.2.3__links//:defs.bzl", link_35 = "link_npm_package")
load("@npm__at_istanbuljs_load-nyc-config__1.1.0__links//:defs.bzl", link_36 = "link_npm_package")
load("@npm__at_istanbuljs_schema__0.1.3__links//:defs.bzl", link_37 = "link_npm_package")
load("@npm__at_jest_console__28.1.0__links//:defs.bzl", link_38 = "link_npm_package")
load("@npm__at_jest_core__28.1.0__links//:defs.bzl", link_39 = "link_npm_package")
load("@npm__at_jest_environment__28.1.0__links//:defs.bzl", link_40 = "link_npm_package")
load("@npm__at_jest_expect-utils__28.1.0__links//:defs.bzl", link_41 = "link_npm_package")
load("@npm__at_jest_expect__28.1.0__links//:defs.bzl", link_42 = "link_npm_package")
load("@npm__at_jest_fake-timers__28.1.0__links//:defs.bzl", link_43 = "link_npm_package")
load("@npm__at_jest_globals__28.1.0__links//:defs.bzl", link_44 = "link_npm_package")
load("@npm__at_jest_reporters__28.1.0__links//:defs.bzl", link_45 = "link_npm_package")
load("@npm__at_jest_schemas__28.0.2__links//:defs.bzl", link_46 = "link_npm_package")
load("@npm__at_jest_source-map__28.0.2__links//:defs.bzl", link_47 = "link_npm_package")
load("@npm__at_jest_test-result__28.1.0__links//:defs.bzl", link_48 = "link_npm_package")
load("@npm__at_jest_test-sequencer__28.1.0__links//:defs.bzl", link_49 = "link_npm_package")
load("@npm__at_jest_transform__28.1.0__links//:defs.bzl", link_50 = "link_npm_package")
load("@npm__at_jest_types__28.1.0__links//:defs.bzl", link_51 = "link_npm_package")
load("@npm__at_jridgewell_gen-mapping__0.1.1__links//:defs.bzl", link_52 = "link_npm_package")
load("@npm__at_jridgewell_gen-mapping__0.3.1__links//:defs.bzl", link_53 = "link_npm_package")
load("@npm__at_jridgewell_resolve-uri__3.0.7__links//:defs.bzl", link_54 = "link_npm_package")
load("@npm__at_jridgewell_set-array__1.1.1__links//:defs.bzl", link_55 = "link_npm_package")
load("@npm__at_jridgewell_sourcemap-codec__1.4.13__links//:defs.bzl", link_56 = "link_npm_package")
load("@npm__at_jridgewell_trace-mapping__0.3.13__links//:defs.bzl", link_57 = "link_npm_package")
load("@npm__at_sinclair_typebox__0.23.5__links//:defs.bzl", link_58 = "link_npm_package")
load("@npm__at_sinonjs_commons__1.8.3__links//:defs.bzl", link_59 = "link_npm_package")
load("@npm__at_sinonjs_fake-timers__9.1.2__links//:defs.bzl", link_60 = "link_npm_package")
load("@npm__at_types_babel__core__7.1.19__links//:defs.bzl", link_61 = "link_npm_package")
load("@npm__at_types_babel__generator__7.6.4__links//:defs.bzl", link_62 = "link_npm_package")
load("@npm__at_types_babel__template__7.4.1__links//:defs.bzl", link_63 = "link_npm_package")
load("@npm__at_types_babel__traverse__7.17.1__links//:defs.bzl", link_64 = "link_npm_package")
load("@npm__at_types_graceful-fs__4.1.5__links//:defs.bzl", link_65 = "link_npm_package")
load("@npm__at_types_istanbul-lib-coverage__2.0.4__links//:defs.bzl", link_66 = "link_npm_package")
load("@npm__at_types_istanbul-lib-report__3.0.0__links//:defs.bzl", link_67 = "link_npm_package")
load("@npm__at_types_istanbul-reports__3.0.1__links//:defs.bzl", link_68 = "link_npm_package")
load("@npm__at_types_node__17.0.39__links//:defs.bzl", link_69 = "link_npm_package")
load("@npm__at_types_prettier__2.6.3__links//:defs.bzl", link_70 = "link_npm_package")
load("@npm__at_types_stack-utils__2.0.1__links//:defs.bzl", link_71 = "link_npm_package")
load("@npm__at_types_yargs-parser__21.0.0__links//:defs.bzl", link_72 = "link_npm_package")
load("@npm__at_types_yargs__17.0.10__links//:defs.bzl", link_73 = "link_npm_package")
load("@npm__ansi-escapes__4.3.2__links//:defs.bzl", link_74 = "link_npm_package")
load("@npm__ansi-regex__5.0.1__links//:defs.bzl", link_75 = "link_npm_package")
load("@npm__ansi-styles__3.2.1__links//:defs.bzl", link_76 = "link_npm_package")
load("@npm__ansi-styles__4.3.0__links//:defs.bzl", link_77 = "link_npm_package")
load("@npm__ansi-styles__5.2.0__links//:defs.bzl", link_78 = "link_npm_package")
load("@npm__anymatch__3.1.2__links//:defs.bzl", link_79 = "link_npm_package")
load("@npm__argparse__1.0.10__links//:defs.bzl", link_80 = "link_npm_package")
load("@npm__babel-jest__28.1.0__at_babel_core_7.18.2__links//:defs.bzl", link_81 = "link_npm_package")
load("@npm__babel-plugin-istanbul__6.1.1__links//:defs.bzl", link_82 = "link_npm_package")
load("@npm__babel-plugin-jest-hoist__28.0.2__links//:defs.bzl", link_83 = "link_npm_package")
load("@npm__babel-preset-current-node-syntax__1.0.1__at_babel_core_7.18.2__links//:defs.bzl", link_84 = "link_npm_package")
load("@npm__babel-preset-jest__28.0.2__at_babel_core_7.18.2__links//:defs.bzl", link_85 = "link_npm_package")
load("@npm__balanced-match__1.0.2__links//:defs.bzl", link_86 = "link_npm_package")
load("@npm__brace-expansion__1.1.11__links//:defs.bzl", link_87 = "link_npm_package")
load("@npm__braces__3.0.2__links//:defs.bzl", link_88 = "link_npm_package")
load("@npm__browserslist__4.20.3__links//:defs.bzl", link_89 = "link_npm_package")
load("@npm__bser__2.1.1__links//:defs.bzl", link_90 = "link_npm_package")
load("@npm__buffer-from__1.1.2__links//:defs.bzl", link_91 = "link_npm_package")
load("@npm__callsites__3.1.0__links//:defs.bzl", link_92 = "link_npm_package")
load("@npm__camelcase__5.3.1__links//:defs.bzl", link_93 = "link_npm_package")
load("@npm__camelcase__6.3.0__links//:defs.bzl", link_94 = "link_npm_package")
load("@npm__caniuse-lite__1.0.30001346__links//:defs.bzl", link_95 = "link_npm_package")
load("@npm__chalk__2.4.2__links//:defs.bzl", link_96 = "link_npm_package")
load("@npm__chalk__4.1.2__links//:defs.bzl", link_97 = "link_npm_package")
load("@npm__char-regex__1.0.2__links//:defs.bzl", link_98 = "link_npm_package")
load("@npm__ci-info__3.3.1__links//:defs.bzl", link_99 = "link_npm_package")
load("@npm__cjs-module-lexer__1.2.2__links//:defs.bzl", link_100 = "link_npm_package")
load("@npm__cliui__7.0.4__links//:defs.bzl", link_101 = "link_npm_package")
load("@npm__co__4.6.0__links//:defs.bzl", link_102 = "link_npm_package")
load("@npm__collect-v8-coverage__1.0.1__links//:defs.bzl", link_103 = "link_npm_package")
load("@npm__color-convert__1.9.3__links//:defs.bzl", link_104 = "link_npm_package")
load("@npm__color-convert__2.0.1__links//:defs.bzl", link_105 = "link_npm_package")
load("@npm__color-name__1.1.3__links//:defs.bzl", link_106 = "link_npm_package")
load("@npm__color-name__1.1.4__links//:defs.bzl", link_107 = "link_npm_package")
load("@npm__concat-map__0.0.1__links//:defs.bzl", link_108 = "link_npm_package")
load("@npm__convert-source-map__1.8.0__links//:defs.bzl", link_109 = "link_npm_package")
load("@npm__cross-spawn__7.0.3__links//:defs.bzl", link_110 = "link_npm_package")
load("@npm__debug__4.3.4__links//:defs.bzl", link_111 = "link_npm_package")
load("@npm__dedent__0.7.0__links//:defs.bzl", link_112 = "link_npm_package")
load("@npm__deepmerge__4.2.2__links//:defs.bzl", link_113 = "link_npm_package")
load("@npm__detect-newline__3.1.0__links//:defs.bzl", link_114 = "link_npm_package")
load("@npm__diff-sequences__28.0.2__links//:defs.bzl", link_115 = "link_npm_package")
load("@npm__electron-to-chromium__1.4.145__links//:defs.bzl", link_116 = "link_npm_package")
load("@npm__emittery__0.10.2__links//:defs.bzl", link_117 = "link_npm_package")
load("@npm__emoji-regex__8.0.0__links//:defs.bzl", link_118 = "link_npm_package")
load("@npm__error-ex__1.3.2__links//:defs.bzl", link_119 = "link_npm_package")
load("@npm__escalade__3.1.1__links//:defs.bzl", link_120 = "link_npm_package")
load("@npm__escape-string-regexp__1.0.5__links//:defs.bzl", link_121 = "link_npm_package")
load("@npm__escape-string-regexp__2.0.0__links//:defs.bzl", link_122 = "link_npm_package")
load("@npm__esprima__4.0.1__links//:defs.bzl", link_123 = "link_npm_package")
load("@npm__execa__5.1.1__links//:defs.bzl", link_124 = "link_npm_package")
load("@npm__exit__0.1.2__links//:defs.bzl", link_125 = "link_npm_package")
load("@npm__expect__28.1.0__links//:defs.bzl", link_126 = "link_npm_package")
load("@npm__fast-json-stable-stringify__2.1.0__links//:defs.bzl", link_127 = "link_npm_package")
load("@npm__fb-watchman__2.0.1__links//:defs.bzl", link_128 = "link_npm_package")
load("@npm__fill-range__7.0.1__links//:defs.bzl", link_129 = "link_npm_package")
load("@npm__find-up__4.1.0__links//:defs.bzl", link_130 = "link_npm_package")
load("@npm__fs.realpath__1.0.0__links//:defs.bzl", link_131 = "link_npm_package")
load("@npm__fsevents__2.3.2__links//:defs.bzl", link_132 = "link_npm_package")
load("@npm__function-bind__1.1.1__links//:defs.bzl", link_133 = "link_npm_package")
load("@npm__gensync__1.0.0-beta.2__links//:defs.bzl", link_134 = "link_npm_package")
load("@npm__get-caller-file__2.0.5__links//:defs.bzl", link_135 = "link_npm_package")
load("@npm__get-package-type__0.1.0__links//:defs.bzl", link_136 = "link_npm_package")
load("@npm__get-stream__6.0.1__links//:defs.bzl", link_137 = "link_npm_package")
load("@npm__glob__7.2.3__links//:defs.bzl", link_138 = "link_npm_package")
load("@npm__globals__11.12.0__links//:defs.bzl", link_139 = "link_npm_package")
load("@npm__graceful-fs__4.2.10__links//:defs.bzl", link_140 = "link_npm_package")
load("@npm__has-flag__3.0.0__links//:defs.bzl", link_141 = "link_npm_package")
load("@npm__has-flag__4.0.0__links//:defs.bzl", link_142 = "link_npm_package")
load("@npm__has__1.0.3__links//:defs.bzl", link_143 = "link_npm_package")
load("@npm__html-escaper__2.0.2__links//:defs.bzl", link_144 = "link_npm_package")
load("@npm__human-signals__2.1.0__links//:defs.bzl", link_145 = "link_npm_package")
load("@npm__import-local__3.1.0__links//:defs.bzl", link_146 = "link_npm_package")
load("@npm__imurmurhash__0.1.4__links//:defs.bzl", link_147 = "link_npm_package")
load("@npm__inflight__1.0.6__links//:defs.bzl", link_148 = "link_npm_package")
load("@npm__inherits__2.0.4__links//:defs.bzl", link_149 = "link_npm_package")
load("@npm__is-arrayish__0.2.1__links//:defs.bzl", link_150 = "link_npm_package")
load("@npm__is-core-module__2.9.0__links//:defs.bzl", link_151 = "link_npm_package")
load("@npm__is-fullwidth-code-point__3.0.0__links//:defs.bzl", link_152 = "link_npm_package")
load("@npm__is-generator-fn__2.1.0__links//:defs.bzl", link_153 = "link_npm_package")
load("@npm__is-number__7.0.0__links//:defs.bzl", link_154 = "link_npm_package")
load("@npm__is-stream__2.0.1__links//:defs.bzl", link_155 = "link_npm_package")
load("@npm__isexe__2.0.0__links//:defs.bzl", link_156 = "link_npm_package")
load("@npm__istanbul-lib-coverage__3.2.0__links//:defs.bzl", link_157 = "link_npm_package")
load("@npm__istanbul-lib-instrument__5.2.0__links//:defs.bzl", link_158 = "link_npm_package")
load("@npm__istanbul-lib-report__3.0.0__links//:defs.bzl", link_159 = "link_npm_package")
load("@npm__istanbul-lib-source-maps__4.0.1__links//:defs.bzl", link_160 = "link_npm_package")
load("@npm__istanbul-reports__3.1.4__links//:defs.bzl", link_161 = "link_npm_package")
load("@npm__jest-changed-files__28.0.2__links//:defs.bzl", link_162 = "link_npm_package")
load("@npm__jest-circus__28.1.0__links//:defs.bzl", link_163 = "link_npm_package")
load("@npm__jest-cli__28.1.0__links//:defs.bzl", link_164 = "link_npm_package")
load("@npm__jest-config__28.1.0__links//:defs.bzl", link_165 = "link_npm_package")
load("@npm__jest-config__28.1.0__at_types_node_17.0.39__links//:defs.bzl", link_166 = "link_npm_package")
load("@npm__jest-diff__28.1.0__links//:defs.bzl", link_167 = "link_npm_package")
load("@npm__jest-docblock__28.0.2__links//:defs.bzl", link_168 = "link_npm_package")
load("@npm__jest-each__28.1.0__links//:defs.bzl", link_169 = "link_npm_package")
load("@npm__jest-environment-node__28.1.0__links//:defs.bzl", link_170 = "link_npm_package")
load("@npm__jest-get-type__28.0.2__links//:defs.bzl", link_171 = "link_npm_package")
load("@npm__jest-haste-map__28.1.0__links//:defs.bzl", link_172 = "link_npm_package")
load("@npm__jest-leak-detector__28.1.0__links//:defs.bzl", link_173 = "link_npm_package")
load("@npm__jest-matcher-utils__28.1.0__links//:defs.bzl", link_174 = "link_npm_package")
load("@npm__jest-message-util__28.1.0__links//:defs.bzl", link_175 = "link_npm_package")
load("@npm__jest-mock__28.1.0__links//:defs.bzl", link_176 = "link_npm_package")
load("@npm__jest-pnp-resolver__1.2.2__jest-resolve_28.1.0__links//:defs.bzl", link_177 = "link_npm_package")
load("@npm__jest-regex-util__28.0.2__links//:defs.bzl", link_178 = "link_npm_package")
load("@npm__jest-resolve-dependencies__28.1.0__links//:defs.bzl", link_179 = "link_npm_package")
load("@npm__jest-resolve__28.1.0__links//:defs.bzl", link_180 = "link_npm_package")
load("@npm__jest-runner__28.1.0__links//:defs.bzl", link_181 = "link_npm_package")
load("@npm__jest-runtime__28.1.0__links//:defs.bzl", link_182 = "link_npm_package")
load("@npm__jest-snapshot__28.1.0__links//:defs.bzl", link_183 = "link_npm_package")
load("@npm__jest-util__28.1.0__links//:defs.bzl", link_184 = "link_npm_package")
load("@npm__jest-validate__28.1.0__links//:defs.bzl", link_185 = "link_npm_package")
load("@npm__jest-watcher__28.1.0__links//:defs.bzl", link_186 = "link_npm_package")
load("@npm__jest-worker__28.1.0__links//:defs.bzl", link_187 = "link_npm_package")
load("@npm__js-tokens__4.0.0__links//:defs.bzl", link_188 = "link_npm_package")
load("@npm__js-yaml__3.14.1__links//:defs.bzl", link_189 = "link_npm_package")
load("@npm__jsesc__2.5.2__links//:defs.bzl", link_190 = "link_npm_package")
load("@npm__json-parse-even-better-errors__2.3.1__links//:defs.bzl", link_191 = "link_npm_package")
load("@npm__json5__2.2.1__links//:defs.bzl", link_192 = "link_npm_package")
load("@npm__kleur__3.0.3__links//:defs.bzl", link_193 = "link_npm_package")
load("@npm__leven__3.1.0__links//:defs.bzl", link_194 = "link_npm_package")
load("@npm__lines-and-columns__1.2.4__links//:defs.bzl", link_195 = "link_npm_package")
load("@npm__locate-path__5.0.0__links//:defs.bzl", link_196 = "link_npm_package")
load("@npm__lru-cache__6.0.0__links//:defs.bzl", link_197 = "link_npm_package")
load("@npm__make-dir__3.1.0__links//:defs.bzl", link_198 = "link_npm_package")
load("@npm__makeerror__1.0.12__links//:defs.bzl", link_199 = "link_npm_package")
load("@npm__merge-stream__2.0.0__links//:defs.bzl", link_200 = "link_npm_package")
load("@npm__micromatch__4.0.5__links//:defs.bzl", link_201 = "link_npm_package")
load("@npm__mimic-fn__2.1.0__links//:defs.bzl", link_202 = "link_npm_package")
load("@npm__minimatch__3.1.2__links//:defs.bzl", link_203 = "link_npm_package")
load("@npm__ms__2.1.2__links//:defs.bzl", link_204 = "link_npm_package")
load("@npm__natural-compare__1.4.0__links//:defs.bzl", link_205 = "link_npm_package")
load("@npm__node-int64__0.4.0__links//:defs.bzl", link_206 = "link_npm_package")
load("@npm__node-releases__2.0.5__links//:defs.bzl", link_207 = "link_npm_package")
load("@npm__normalize-path__3.0.0__links//:defs.bzl", link_208 = "link_npm_package")
load("@npm__npm-run-path__4.0.1__links//:defs.bzl", link_209 = "link_npm_package")
load("@npm__once__1.4.0__links//:defs.bzl", link_210 = "link_npm_package")
load("@npm__onetime__5.1.2__links//:defs.bzl", link_211 = "link_npm_package")
load("@npm__p-limit__2.3.0__links//:defs.bzl", link_212 = "link_npm_package")
load("@npm__p-locate__4.1.0__links//:defs.bzl", link_213 = "link_npm_package")
load("@npm__p-try__2.2.0__links//:defs.bzl", link_214 = "link_npm_package")
load("@npm__parse-json__5.2.0__links//:defs.bzl", link_215 = "link_npm_package")
load("@npm__path-exists__4.0.0__links//:defs.bzl", link_216 = "link_npm_package")
load("@npm__path-is-absolute__1.0.1__links//:defs.bzl", link_217 = "link_npm_package")
load("@npm__path-key__3.1.1__links//:defs.bzl", link_218 = "link_npm_package")
load("@npm__path-parse__1.0.7__links//:defs.bzl", link_219 = "link_npm_package")
load("@npm__picocolors__1.0.0__links//:defs.bzl", link_220 = "link_npm_package")
load("@npm__picomatch__2.3.1__links//:defs.bzl", link_221 = "link_npm_package")
load("@npm__pirates__4.0.5__links//:defs.bzl", link_222 = "link_npm_package")
load("@npm__pkg-dir__4.2.0__links//:defs.bzl", link_223 = "link_npm_package")
load("@npm__pretty-format__28.1.0__links//:defs.bzl", link_224 = "link_npm_package")
load("@npm__prompts__2.4.2__links//:defs.bzl", link_225 = "link_npm_package")
load("@npm__react-is__18.1.0__links//:defs.bzl", link_226 = "link_npm_package")
load("@npm__require-directory__2.1.1__links//:defs.bzl", link_227 = "link_npm_package")
load("@npm__resolve-cwd__3.0.0__links//:defs.bzl", link_228 = "link_npm_package")
load("@npm__resolve-from__5.0.0__links//:defs.bzl", link_229 = "link_npm_package")
load("@npm__resolve.exports__1.1.0__links//:defs.bzl", link_230 = "link_npm_package")
load("@npm__resolve__1.22.0__links//:defs.bzl", link_231 = "link_npm_package")
load("@npm__rimraf__3.0.2__links//:defs.bzl", link_232 = "link_npm_package")
load("@npm__safe-buffer__5.1.2__links//:defs.bzl", link_233 = "link_npm_package")
load("@npm__semver__6.3.0__links//:defs.bzl", link_234 = "link_npm_package")
load("@npm__semver__7.3.7__links//:defs.bzl", link_235 = "link_npm_package")
load("@npm__shebang-command__2.0.0__links//:defs.bzl", link_236 = "link_npm_package")
load("@npm__shebang-regex__3.0.0__links//:defs.bzl", link_237 = "link_npm_package")
load("@npm__signal-exit__3.0.7__links//:defs.bzl", link_238 = "link_npm_package")
load("@npm__sisteransi__1.0.5__links//:defs.bzl", link_239 = "link_npm_package")
load("@npm__slash__3.0.0__links//:defs.bzl", link_240 = "link_npm_package")
load("@npm__source-map-support__0.5.13__links//:defs.bzl", link_241 = "link_npm_package")
load("@npm__source-map__0.6.1__links//:defs.bzl", link_242 = "link_npm_package")
load("@npm__sprintf-js__1.0.3__links//:defs.bzl", link_243 = "link_npm_package")
load("@npm__stack-utils__2.0.5__links//:defs.bzl", link_244 = "link_npm_package")
load("@npm__string-length__4.0.2__links//:defs.bzl", link_245 = "link_npm_package")
load("@npm__string-width__4.2.3__links//:defs.bzl", link_246 = "link_npm_package")
load("@npm__strip-ansi__6.0.1__links//:defs.bzl", link_247 = "link_npm_package")
load("@npm__strip-bom__4.0.0__links//:defs.bzl", link_248 = "link_npm_package")
load("@npm__strip-final-newline__2.0.0__links//:defs.bzl", link_249 = "link_npm_package")
load("@npm__strip-json-comments__3.1.1__links//:defs.bzl", link_250 = "link_npm_package")
load("@npm__supports-color__5.5.0__links//:defs.bzl", link_251 = "link_npm_package")
load("@npm__supports-color__7.2.0__links//:defs.bzl", link_252 = "link_npm_package")
load("@npm__supports-color__8.1.1__links//:defs.bzl", link_253 = "link_npm_package")
load("@npm__supports-hyperlinks__2.2.0__links//:defs.bzl", link_254 = "link_npm_package")
load("@npm__supports-preserve-symlinks-flag__1.0.0__links//:defs.bzl", link_255 = "link_npm_package")
load("@npm__terminal-link__2.1.1__links//:defs.bzl", link_256 = "link_npm_package")
load("@npm__test-exclude__6.0.0__links//:defs.bzl", link_257 = "link_npm_package")
load("@npm__throat__6.0.1__links//:defs.bzl", link_258 = "link_npm_package")
load("@npm__tmpl__1.0.5__links//:defs.bzl", link_259 = "link_npm_package")
load("@npm__to-fast-properties__2.0.0__links//:defs.bzl", link_260 = "link_npm_package")
load("@npm__to-regex-range__5.0.1__links//:defs.bzl", link_261 = "link_npm_package")
load("@npm__type-detect__4.0.8__links//:defs.bzl", link_262 = "link_npm_package")
load("@npm__type-fest__0.21.3__links//:defs.bzl", link_263 = "link_npm_package")
load("@npm__v8-to-istanbul__9.0.0__links//:defs.bzl", link_264 = "link_npm_package")
load("@npm__walker__1.0.8__links//:defs.bzl", link_265 = "link_npm_package")
load("@npm__which__2.0.2__links//:defs.bzl", link_266 = "link_npm_package")
load("@npm__wrap-ansi__7.0.0__links//:defs.bzl", link_267 = "link_npm_package")
load("@npm__wrappy__1.0.2__links//:defs.bzl", link_268 = "link_npm_package")
load("@npm__write-file-atomic__4.0.1__links//:defs.bzl", link_269 = "link_npm_package")
load("@npm__y18n__5.0.8__links//:defs.bzl", link_270 = "link_npm_package")
load("@npm__yallist__4.0.0__links//:defs.bzl", link_271 = "link_npm_package")
load("@npm__yargs-parser__21.0.1__links//:defs.bzl", link_272 = "link_npm_package")
load("@npm__yargs__17.5.1__links//:defs.bzl", link_273 = "link_npm_package")

def link_all_npm_packages(name = "node_modules"):
    """Generated list of link_npm_package() target generators and first-party linked packages corresponding to the packages in @//:pnpm-lock.yaml

    Args:
        name: name of catch all target to generate for all packages linked
    """
    root_package = ""
    link_packages = [""]
    is_root = native.package_name() == root_package
    is_direct = native.package_name() in link_packages
    if not is_root and not is_direct:
        msg = "The link_all_npm_packages() macro loaded from @npm//:defs.bzl and called in bazel package '%s' may only be called in the bazel package(s) corresponding to the root package '' and packages ['']" % native.package_name()
        fail(msg)
    direct_targets = []
    scoped_direct_targets = {}

    scoped_direct_targets["@ampproject"] = []
    scoped_direct_targets["@babel"] = []
    scoped_direct_targets["@bcoe"] = []
    scoped_direct_targets["@istanbuljs"] = []
    scoped_direct_targets["@jest"] = []
    scoped_direct_targets["@jridgewell"] = []
    scoped_direct_targets["@sinclair"] = []
    scoped_direct_targets["@sinonjs"] = []
    scoped_direct_targets["@types"] = []
    direct_targets.append(link_0(name = "{}/@ampproject/remapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@ampproject"].append(direct_targets[-1])
    direct_targets.append(link_1(name = "{}/@babel/code-frame".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_2(name = "{}/@babel/compat-data".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_3(name = "{}/@babel/core".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_4(name = "{}/@babel/generator".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_5(name = "{}/@babel/helper-compilation-targets".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_6(name = "{}/@babel/helper-environment-visitor".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_7(name = "{}/@babel/helper-function-name".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_8(name = "{}/@babel/helper-hoist-variables".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_9(name = "{}/@babel/helper-module-imports".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_10(name = "{}/@babel/helper-module-transforms".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_11(name = "{}/@babel/helper-plugin-utils".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_12(name = "{}/@babel/helper-simple-access".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_13(name = "{}/@babel/helper-split-export-declaration".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_14(name = "{}/@babel/helper-validator-identifier".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_15(name = "{}/@babel/helper-validator-option".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_16(name = "{}/@babel/helpers".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_17(name = "{}/@babel/highlight".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_18(name = "{}/@babel/parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_19(name = "{}/@babel/plugin-syntax-async-generators".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_20(name = "{}/@babel/plugin-syntax-bigint".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_21(name = "{}/@babel/plugin-syntax-class-properties".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_22(name = "{}/@babel/plugin-syntax-import-meta".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_23(name = "{}/@babel/plugin-syntax-json-strings".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_24(name = "{}/@babel/plugin-syntax-logical-assignment-operators".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_25(name = "{}/@babel/plugin-syntax-nullish-coalescing-operator".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_26(name = "{}/@babel/plugin-syntax-numeric-separator".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_27(name = "{}/@babel/plugin-syntax-object-rest-spread".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_28(name = "{}/@babel/plugin-syntax-optional-catch-binding".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_29(name = "{}/@babel/plugin-syntax-optional-chaining".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_30(name = "{}/@babel/plugin-syntax-top-level-await".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_31(name = "{}/@babel/plugin-syntax-typescript".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_32(name = "{}/@babel/template".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_33(name = "{}/@babel/traverse".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_34(name = "{}/@babel/types".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@babel"].append(direct_targets[-1])
    direct_targets.append(link_35(name = "{}/@bcoe/v8-coverage".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@bcoe"].append(direct_targets[-1])
    direct_targets.append(link_36(name = "{}/@istanbuljs/load-nyc-config".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@istanbuljs"].append(direct_targets[-1])
    direct_targets.append(link_37(name = "{}/@istanbuljs/schema".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@istanbuljs"].append(direct_targets[-1])
    direct_targets.append(link_38(name = "{}/@jest/console".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_39(name = "{}/@jest/core".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_40(name = "{}/@jest/environment".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_41(name = "{}/@jest/expect-utils".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_42(name = "{}/@jest/expect".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_43(name = "{}/@jest/fake-timers".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_44(name = "{}/@jest/globals".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_45(name = "{}/@jest/reporters".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_46(name = "{}/@jest/schemas".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_47(name = "{}/@jest/source-map".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_48(name = "{}/@jest/test-result".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_49(name = "{}/@jest/test-sequencer".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_50(name = "{}/@jest/transform".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_51(name = "{}/@jest/types".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jest"].append(direct_targets[-1])
    direct_targets.append(link_52(name = "{}/@jridgewell/gen-mapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_53(name = "{}/@jridgewell/gen-mapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_54(name = "{}/@jridgewell/resolve-uri".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_55(name = "{}/@jridgewell/set-array".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_56(name = "{}/@jridgewell/sourcemap-codec".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_57(name = "{}/@jridgewell/trace-mapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_58(name = "{}/@sinclair/typebox".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@sinclair"].append(direct_targets[-1])
    direct_targets.append(link_59(name = "{}/@sinonjs/commons".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@sinonjs"].append(direct_targets[-1])
    direct_targets.append(link_60(name = "{}/@sinonjs/fake-timers".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@sinonjs"].append(direct_targets[-1])
    direct_targets.append(link_61(name = "{}/@types/babel__core".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_62(name = "{}/@types/babel__generator".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_63(name = "{}/@types/babel__template".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_64(name = "{}/@types/babel__traverse".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_65(name = "{}/@types/graceful-fs".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_66(name = "{}/@types/istanbul-lib-coverage".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_67(name = "{}/@types/istanbul-lib-report".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_68(name = "{}/@types/istanbul-reports".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_69(name = "{}/@types/node".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_70(name = "{}/@types/prettier".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_71(name = "{}/@types/stack-utils".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_72(name = "{}/@types/yargs-parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_73(name = "{}/@types/yargs".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_74(name = "{}/ansi-escapes".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_75(name = "{}/ansi-regex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_76(name = "{}/ansi-styles".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_77(name = "{}/ansi-styles".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_78(name = "{}/ansi-styles".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_79(name = "{}/anymatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_80(name = "{}/argparse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_81(name = "{}/babel-jest".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_82(name = "{}/babel-plugin-istanbul".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_83(name = "{}/babel-plugin-jest-hoist".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_84(name = "{}/babel-preset-current-node-syntax".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_85(name = "{}/babel-preset-jest".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_86(name = "{}/balanced-match".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_87(name = "{}/brace-expansion".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_88(name = "{}/braces".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_89(name = "{}/browserslist".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_90(name = "{}/bser".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_91(name = "{}/buffer-from".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_92(name = "{}/callsites".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_93(name = "{}/camelcase".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_94(name = "{}/camelcase".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_95(name = "{}/caniuse-lite".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_96(name = "{}/chalk".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_97(name = "{}/chalk".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_98(name = "{}/char-regex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_99(name = "{}/ci-info".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_100(name = "{}/cjs-module-lexer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_101(name = "{}/cliui".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_102(name = "{}/co".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_103(name = "{}/collect-v8-coverage".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_104(name = "{}/color-convert".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_105(name = "{}/color-convert".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_106(name = "{}/color-name".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_107(name = "{}/color-name".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_108(name = "{}/concat-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_109(name = "{}/convert-source-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_110(name = "{}/cross-spawn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_111(name = "{}/debug".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_112(name = "{}/dedent".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_113(name = "{}/deepmerge".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_114(name = "{}/detect-newline".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_115(name = "{}/diff-sequences".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_116(name = "{}/electron-to-chromium".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_117(name = "{}/emittery".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_118(name = "{}/emoji-regex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_119(name = "{}/error-ex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_120(name = "{}/escalade".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_121(name = "{}/escape-string-regexp".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_122(name = "{}/escape-string-regexp".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_123(name = "{}/esprima".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_124(name = "{}/execa".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_125(name = "{}/exit".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_126(name = "{}/expect".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_127(name = "{}/fast-json-stable-stringify".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_128(name = "{}/fb-watchman".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_129(name = "{}/fill-range".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_130(name = "{}/find-up".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_131(name = "{}/fs.realpath".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_132(name = "{}/fsevents".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_133(name = "{}/function-bind".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_134(name = "{}/gensync".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_135(name = "{}/get-caller-file".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_136(name = "{}/get-package-type".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_137(name = "{}/get-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_138(name = "{}/glob".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_139(name = "{}/globals".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_140(name = "{}/graceful-fs".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_141(name = "{}/has-flag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_142(name = "{}/has-flag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_143(name = "{}/has".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_144(name = "{}/html-escaper".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_145(name = "{}/human-signals".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_146(name = "{}/import-local".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_147(name = "{}/imurmurhash".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_148(name = "{}/inflight".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_149(name = "{}/inherits".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_150(name = "{}/is-arrayish".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_151(name = "{}/is-core-module".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_152(name = "{}/is-fullwidth-code-point".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_153(name = "{}/is-generator-fn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_154(name = "{}/is-number".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_155(name = "{}/is-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_156(name = "{}/isexe".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_157(name = "{}/istanbul-lib-coverage".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_158(name = "{}/istanbul-lib-instrument".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_159(name = "{}/istanbul-lib-report".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_160(name = "{}/istanbul-lib-source-maps".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_161(name = "{}/istanbul-reports".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_162(name = "{}/jest-changed-files".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_163(name = "{}/jest-circus".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_164(name = "{}/jest-cli".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_165(name = "{}/jest-config".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_166(name = "{}/jest-config".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_167(name = "{}/jest-diff".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_168(name = "{}/jest-docblock".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_169(name = "{}/jest-each".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_170(name = "{}/jest-environment-node".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_171(name = "{}/jest-get-type".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_172(name = "{}/jest-haste-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_173(name = "{}/jest-leak-detector".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_174(name = "{}/jest-matcher-utils".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_175(name = "{}/jest-message-util".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_176(name = "{}/jest-mock".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_177(name = "{}/jest-pnp-resolver".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_178(name = "{}/jest-regex-util".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_179(name = "{}/jest-resolve-dependencies".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_180(name = "{}/jest-resolve".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_181(name = "{}/jest-runner".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_182(name = "{}/jest-runtime".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_183(name = "{}/jest-snapshot".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_184(name = "{}/jest-util".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_185(name = "{}/jest-validate".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_186(name = "{}/jest-watcher".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_187(name = "{}/jest-worker".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_188(name = "{}/js-tokens".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_189(name = "{}/js-yaml".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_190(name = "{}/jsesc".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_191(name = "{}/json-parse-even-better-errors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_192(name = "{}/json5".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_193(name = "{}/kleur".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_194(name = "{}/leven".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_195(name = "{}/lines-and-columns".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_196(name = "{}/locate-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_197(name = "{}/lru-cache".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_198(name = "{}/make-dir".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_199(name = "{}/makeerror".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_200(name = "{}/merge-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_201(name = "{}/micromatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_202(name = "{}/mimic-fn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_203(name = "{}/minimatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_204(name = "{}/ms".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_205(name = "{}/natural-compare".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_206(name = "{}/node-int64".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_207(name = "{}/node-releases".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_208(name = "{}/normalize-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_209(name = "{}/npm-run-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_210(name = "{}/once".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_211(name = "{}/onetime".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_212(name = "{}/p-limit".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_213(name = "{}/p-locate".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_214(name = "{}/p-try".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_215(name = "{}/parse-json".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_216(name = "{}/path-exists".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_217(name = "{}/path-is-absolute".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_218(name = "{}/path-key".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_219(name = "{}/path-parse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_220(name = "{}/picocolors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_221(name = "{}/picomatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_222(name = "{}/pirates".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_223(name = "{}/pkg-dir".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_224(name = "{}/pretty-format".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_225(name = "{}/prompts".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_226(name = "{}/react-is".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_227(name = "{}/require-directory".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_228(name = "{}/resolve-cwd".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_229(name = "{}/resolve-from".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_230(name = "{}/resolve.exports".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_231(name = "{}/resolve".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_232(name = "{}/rimraf".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_233(name = "{}/safe-buffer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_234(name = "{}/semver".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_235(name = "{}/semver".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_236(name = "{}/shebang-command".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_237(name = "{}/shebang-regex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_238(name = "{}/signal-exit".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_239(name = "{}/sisteransi".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_240(name = "{}/slash".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_241(name = "{}/source-map-support".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_242(name = "{}/source-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_243(name = "{}/sprintf-js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_244(name = "{}/stack-utils".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_245(name = "{}/string-length".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_246(name = "{}/string-width".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_247(name = "{}/strip-ansi".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_248(name = "{}/strip-bom".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_249(name = "{}/strip-final-newline".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_250(name = "{}/strip-json-comments".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_251(name = "{}/supports-color".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_252(name = "{}/supports-color".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_253(name = "{}/supports-color".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_254(name = "{}/supports-hyperlinks".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_255(name = "{}/supports-preserve-symlinks-flag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_256(name = "{}/terminal-link".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_257(name = "{}/test-exclude".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_258(name = "{}/throat".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_259(name = "{}/tmpl".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_260(name = "{}/to-fast-properties".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_261(name = "{}/to-regex-range".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_262(name = "{}/type-detect".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_263(name = "{}/type-fest".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_264(name = "{}/v8-to-istanbul".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_265(name = "{}/walker".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_266(name = "{}/which".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_267(name = "{}/wrap-ansi".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_268(name = "{}/wrappy".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_269(name = "{}/write-file-atomic".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_270(name = "{}/y18n".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_271(name = "{}/yallist".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_272(name = "{}/yargs-parser".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_273(name = "{}/yargs".format(name), direct = None, fail_if_no_link = False))

    for scope, scoped_targets in scoped_direct_targets.items():
        linked_npm_packages(
            name = "{}/{}".format(name, scope),
            srcs = [t for t in scoped_targets if t],
            tags = ["manual"],
            visibility = ["//visibility:public"],
        )

    linked_npm_packages(
        name = name,
        srcs = [t for t in direct_targets if t],
        tags = ["manual"],
        visibility = ["//visibility:public"],
    )

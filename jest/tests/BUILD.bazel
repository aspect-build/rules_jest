load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("//jest:defs.bzl", "jest_test")

npm_link_all_packages(name = "node_modules")

exports_files([
    "case3.jest.config.js",
    "case3.test.js",
])

# Case 1: jest_test sets JEST_JUNIT_OUTPUT_FILE env var to bazel xml output path
# even when auto_configure_reporters is disabled
jest_test(
    name = "case1",
    auto_configure_reporters = False,
    config = "case1.jest.config.js",
    data = [
        "case1.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 2a: jest config file in a subdirectory
jest_test(
    name = "case2a",
    config = "case2/case2.jest.config.js",
    data = [
        "case2/case2.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 2b: jest config file in a subdirectory with chdir
jest_test(
    name = "case2b",
    chdir = "jest",
    config = "case2/case2.jest.config.js",
    data = [
        "case2/case2.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 3: Test in root package (see //:case4)

# Case 4: Run test in external repository
# See e2e/case4.sh

# Case 5: Disable auto_configure_reporters and configure default reporter
jest_test(
    name = "case5",
    auto_configure_reporters = False,
    config = "case5.jest.config.js",
    data = [
        "case5.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 6: Coverage reporting (see e2e test)
jest_test(
    name = "case6",
    config = "case6.jest.config.js",
    data = [
        "case6.index.js",
        "case6.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 7: Coverage reporting, no supplied jest config file (see e2e test)
jest_test(
    name = "case7",
    data = [
        "case7.index.js",
        "case7.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 8: config in root directory
jest_test(
    name = "case8",
    config = "//:case8.config",
    data = [
        "case8.test.js",
    ],
    node_modules = "//:node_modules",
)

# Case 9: native esm modules using .mjs and --experimental-vm-modules
jest_test(
    name = "case9",
    config = "case9.jest.config.js",
    data = [
        "case9.index.mjs",
        "case9.test.mjs",
    ],
    node_modules = "//:node_modules",
    node_options = [
        "--experimental-vm-modules",
    ],
)

# Case 10: A js_library() config with dependencies
jest_test(
    name = "case10",
    config = ":case10-config",
    data = [
        "case10.test.js",
    ],
    node_modules = "//:node_modules",
)

js_library(
    name = "case10-config",
    srcs = [
        "case10.jest.config.js",
    ],
    data = [
        "case10.setup.js",
    ],
)
